{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","getTabContent","content","className","map","classNames","href","onClick","handleClick","title","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAIaA,EAAO,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACpCC,EAAcH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,MAAkBD,EAAK,GAEnEO,EAAa,UAAGP,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,YAAjC,aAAG,EAA8CO,QAQpE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACL,GAAD,OACR,oBACEI,UAAWE,IAAW,CAAE,YAAaN,EAAIC,KAAOH,EAAYG,KAC5D,UAAQ,MAFV,SAKE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAnBH,SAACR,GACfA,EAAIC,KAAOL,GACbC,EAAcG,GAiBWS,CAAYT,IAH7B,SAKGA,EAAIU,SAPFV,EAAIC,WAcjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QC/BIP,EAAc,CACzB,CAAEM,GAAI,QAASS,MAAO,QAASP,QAAS,eACxC,CAAEF,GAAI,QAASS,MAAO,QAASP,QAAS,eACxC,CAAEF,GAAI,QAASS,MAAO,QAASP,QAAS,gBAG7BQ,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOG,EAAP,KAAoBe,EAApB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAN,EAAYY,SAGf,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAfgB,SAACG,GACrBa,EAAeb,UCdnBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1f25e1d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../types/Tab';\nimport { TabsProps } from '../types/Tabs';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const getTabContent = tabs.find((tab) => tab.id === selectedTabId)?.content;\n\n  const handleClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={classNames({ 'is-active': tab.id === selectedTab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './components/types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}